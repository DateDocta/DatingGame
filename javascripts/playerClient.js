// Generated by CoffeeScript 1.10.0
(function() {
  var HOST, MATCHMAKER_PORT, N, PLAYER_PORT, Utils, client, connectingPort, createBasicCandidate, lastReceivedNumbers, lastReceivedScore, makeCandidate, net, utils;

  console.log("In player Client");

  net = require('net');

  Utils = require("./utils");

  utils = new Utils;

  N = utils.getN();

  HOST = utils.getHOST();

  MATCHMAKER_PORT = utils.getMATCHMAKER_PORT();

  PLAYER_PORT = utils.getPLAYER_PORT();

  lastReceivedNumbers = [];

  lastReceivedScore = 0;

  connectingPort = {
    port: PLAYER_PORT
  };

  makeCandidate = function() {
    var basicCandidate;
    return basicCandidate = createBasicCandidate();
  };

  createBasicCandidate = function() {
    var candidate, i, index, ref, weightValue;
    candidate = [];
    weightValue = 1 / (N / 2);
    for (index = i = 1, ref = N; 1 <= ref ? i <= ref : i >= ref; index = 1 <= ref ? ++i : --i) {
      if (index % 2 === 0) {
        candidate.push(weightValue);
      } else {
        candidate.push(-weightValue);
      }
    }
    return candidate;
  };

  client = net.connect(connectingPort, function() {
    var candidate, candidateString;
    console.log("Player Client Created");
    candidate = makeCandidate();
    candidateString = utils.convertNumArrayToFormattedString(candidate);
    return client.write(candidateString);
  });

  client.on('data', function(data) {
    var candidate, candidateString;
    console.log("Player Client Received Data");
    if (data === !"gameover") {
      console.log("Player Client sending data");
      candidate = makeCandidate();
      candidateString = utils.convertNumArrayToFormattedString(candidate);
      return client.write(candidateString);
    }
  });

}).call(this);
