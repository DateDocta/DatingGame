// Generated by CoffeeScript 1.10.0
(function() {
  var HOST, MATCHMAKER_PORT, N, PLAYER_PORT, Utils, client, connectingPort, createBasicCandidate, lastReceivedNumbers, lastReceivedScore, makeCandidate, net, utilsL;

  console.log("In player Client");

  net = require('net');

  Utils = require("./utils");

  this.utils = new Utils;

  utilsL = this.utils;

  N = this.utils.N;

  HOST = this.utils.HOST;

  MATCHMAKER_PORT = this.utils.MATCHMAKER_PORT;

  PLAYER_PORT = this.utils.PLAYER_PORT;

  lastReceivedNumbers = [];

  lastReceivedScore = 0;

  connectingPort = {
    port: PLAYER_PORT
  };

  makeCandidate = function() {
    var basicCandidate;
    return basicCandidate = createBasicCandidate();
  };

  createBasicCandidate = function() {
    var candidate, i, index, ref, weightValue;
    candidate = [];
    weightValue = 1 / (N / 2);
    for (index = i = 1, ref = N; 1 <= ref ? i <= ref : i >= ref; index = 1 <= ref ? ++i : --i) {
      if (index % 2 === 0) {
        candidate.push(weightValue);
      } else {
        candidate.push(-weightValue);
      }
    }
    return candidate;
  };

  client = net.connect(connectingPort, function() {
    var candidate, candidateString;
    console.log("Player client connected on port " + connectingPort.port);
    candidate = makeCandidate();
    candidateString = utilsL.convertNumArrayToFormattedString(candidate);
    return client.write(candidateString);
  });

  client.on('data', function(data) {
    var candidate, candidateString;
    data = data.toString();
    if (data !== "gameover") {
      candidate = makeCandidate();
      candidateString = utilsL.convertNumArrayToFormattedString(candidate);
      console.log("Player Client sending data");
      return client.write(candidateString);
    } else {
      return console.log("GAMEOVER");
    }
  });

}).call(this);
